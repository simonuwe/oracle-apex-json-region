set echo on

drop table if exists DATAITEM;
drop table if exists HOTEL_FEATURE;
drop table if exists RELATION;
drop table if exists OBJECT;

drop table if exists RELATION_TYPE;
drop table if exists OBJECT_TYPE;
drop table if exists CARDINALITY;

drop table if exists OBJECT23C;

--------------------------------------------------------
--  Datei erstellt -Samstag-März-30-2024   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table CARDINALITY
--------------------------------------------------------

  CREATE TABLE "CARDINALITY" 
   (	"CARDINALITY_ID" NUMBER(*,0), 
	"CARDINALITY_NAME" VARCHAR2(30)
   ) ;
--------------------------------------------------------
--  DDL for Table DATAITEM
--------------------------------------------------------

  CREATE TABLE "DATAITEM" 
   (	"DATAITEM_ID" NUMBER(*,0) GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"DATAITEM_NAME" VARCHAR2(30), 
	"DATA" JSON
   ) ;
--------------------------------------------------------
--  DDL for Table HOTEL_FEATURE
--------------------------------------------------------

  CREATE TABLE "HOTEL_FEATURE" 
   (	"FEATURE" VARCHAR2(100)
   ) ;
--------------------------------------------------------
--  DDL for Table OBJECT
--------------------------------------------------------

  CREATE TABLE "OBJECT" 
   (	"OBJECT_ID" NUMBER(*,0) GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"OBJECT_TYPE_ID" NUMBER(*,0), 
	"OBJECT_NAME" VARCHAR2(30), 
	"CREATED_AT" DATE DEFAULT CURRENT_DATE, 
	"DATA" CLOB
   ) ;
--------------------------------------------------------
--  DDL for Table OBJECT_TYPE
--------------------------------------------------------

  CREATE TABLE "OBJECT_TYPE" 
   (	"OBJECT_TYPE_ID" NUMBER(*,0) GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"OBJECT_TYPE_NAME" VARCHAR2(30), 
	"OBJECT_SCHEMA" CLOB
   ) ;
--------------------------------------------------------
--  DDL for Table OBJECT23C
--------------------------------------------------------

  CREATE TABLE "OBJECT23C" 
   (	"OBJECT_ID" NUMBER(*,0) GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"OBJECT_NAME" VARCHAR2(30), 
	"DATA" JSON
   ) ;
--------------------------------------------------------
--  DDL for Table RELATION
--------------------------------------------------------

  CREATE TABLE "RELATION" 
   (	"RELATION_ID" NUMBER(*,0) GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"CREATED_AT" DATE DEFAULT CURRENT_DATE, 
	"RELATION_TYPE_ID" NUMBER(*,0), 
	"FROM_OBJECT_ID" NUMBER(*,0), 
	"TO_OBJECT_ID" NUMBER(*,0), 
	"DATA" CLOB
   ) ;
--------------------------------------------------------
--  DDL for Table RELATION_TYPE
--------------------------------------------------------

  CREATE TABLE "RELATION_TYPE" 
   (	"RELATION_TYPE_ID" NUMBER(*,0) GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"RELATION_TYPE_NAME" VARCHAR2(30), 
	"FROM_OBJECT_TYPE_ID" NUMBER(*,0), 
	"FROM_CARDINALITY_ID" NUMBER(*,0), 
	"TO_OBJECT_TYPE_ID" NUMBER(*,0), 
	"TO_CARDINALITY_ID" NUMBER(*,0), 
	"RELATION_SCHEMA" CLOB
   ) ;

REM INSERTING into CARDINALITY
SET DEFINE OFF;
Insert into CARDINALITY (CARDINALITY_ID,CARDINALITY_NAME) values ('1','0:1');
Insert into CARDINALITY (CARDINALITY_ID,CARDINALITY_NAME) values ('2','1:1');
Insert into CARDINALITY (CARDINALITY_ID,CARDINALITY_NAME) values ('3','0:n');
Insert into CARDINALITY (CARDINALITY_ID,CARDINALITY_NAME) values ('4','1:n');
REM INSERTING into DATAITEM
SET DEFINE OFF;
Insert into DATAITEM (DATAITEM_ID,DATAITEM_NAME,DATA) values ('41','aaa','{"fruit":"bbb","quantity":1,"puchasedat":"2023-12-20","features":["Pool","Bar","Carpark"]}');
Insert into DATAITEM (DATAITEM_ID,DATAITEM_NAME,DATA) values ('1','banana','{"fruit":"Banana","quantity":10,"features":["Pool","Bar"]}');
Insert into DATAITEM (DATAITEM_ID,DATAITEM_NAME,DATA) values ('21','abc','{"fruit":"Mango","quantity":1,"puchasedat":"2023-12-27","features":["Carpark","Gym"]}');
REM INSERTING into HOTEL_FEATURE
SET DEFINE OFF;
Insert into HOTEL_FEATURE (FEATURE) values ('Bar');
Insert into HOTEL_FEATURE (FEATURE) values ('Carpark');
Insert into HOTEL_FEATURE (FEATURE) values ('Pool');
Insert into HOTEL_FEATURE (FEATURE) values ('Restaurant');
REM INSERTING into OBJECT
SET DEFINE OFF;
Insert into OBJECT (OBJECT_ID,OBJECT_TYPE_ID,OBJECT_NAME,CREATED_AT,DATA) values ('41','4','example-3',to_date('2023-12-08 00:00:00','yyyy-mm-dd hh24:mi:ss'),'{"gender":"female","retired":false,"source":"via APEX-application","home_address":{"zipcode":"z1","city":"c1"},"office_address":{"zipcode":"z2","city":"c2"},"lastname":"Last1","lastlogin":"2024-03-29T19:09:00"}');
Insert into OBJECT (OBJECT_ID,OBJECT_TYPE_ID,OBJECT_NAME,CREATED_AT,DATA) values ('61','43','example-1',to_date('2024-03-22 16:55:04','yyyy-mm-dd hh24:mi:ss'),'{"enum":"val1","short_string":"short","long_string":"long\nlong\n15\"\nlong","bool":false,"int":123,"number":12.567,"date":"2024-03-22","email":"support@oracle.com","uri":"https://oracle.com","pattern":"1234 5678 9012 3456"}');
Insert into OBJECT (OBJECT_ID,OBJECT_TYPE_ID,OBJECT_NAME,CREATED_AT,DATA) values ('63','61','customize-example',to_date('2024-03-22 18:47:56','yyyy-mm-dd hh24:mi:ss'),'{"enum":"val1","short_string":"short","long_string":"long  \nlong  \n15\"  \nlong","bool":true,"int":4,"number":123.456,"money":100,"date":"2024-03-22","date_time":"2024-03-22T21:30:00","email":"support@oracle.com","uri":"https://oracle.com","pattern":"1234 5678 9012 3456","multi":["val1","val2"]}');
Insert into OBJECT (OBJECT_ID,OBJECT_TYPE_ID,OBJECT_NAME,CREATED_AT,DATA) values ('81','81','example-2',to_date('2024-03-28 21:24:25','yyyy-mm-dd hh24:mi:ss'),'{"lastname":"Simon","firstname":"Uwe","email":"usdbc@magenta.de","knowledge":["DB","APEX","Javascript","PL/SQL"],"creditcard":"Visa","creditid":"1234 5678 9012 3456","office_address":{"country":"D","state":"NRW","zipcode":"50000","city":"City1","street":"Street1"},"deliverytohome":true,"home_address":{"country":"D","state":"NRW","zipcode":"50000","city":"City2","street":"Street2"}}');
Insert into OBJECT (OBJECT_ID,OBJECT_TYPE_ID,OBJECT_NAME,CREATED_AT,DATA) values ('2','5','cgn-hyr',to_date('2023-12-01 00:00:00','yyyy-mm-dd hh24:mi:ss'),'{"name":"Hyatt Regency","continent":"Europe","country":"Germany","city":"Cologne","stars":4,"roomrates":{"from":99,"to":750},"allinclusive":false,"breakfastincluded":true,"updated":"2023-12-03T20:45:00","features":["Pool","Bar","Restaurant","Carpark"],"comment":"Ein **weiterer** Kommentar\n\n`{`  \n  `\"abc\": \"def\".`  \n  `\"xyz\": true`  \n`}`"}');

REM INSERTING into OBJECT_TYPE
SET DEFINE OFF;
Insert into OBJECT_TYPE (OBJECT_TYPE_ID,OBJECT_TYPE_NAME,OBJECT_SCHEMA) values ('5','Hotel',TO_CLOB(q'[{"type":"object","properties":{"name":{"type":"string"},"continent":{"type":"string","enum":["Europe","Africa","America","Antarctica","Asia","Australia"],"apex":{"itemtype":"radio","newRow":true,"textBefore":"Location Info"}},"country":{"type":"string"},"city":{"type":"string"},"stars":{"type":"integer","maximum":5,"apex":{"itemtype":"starrating","label":"*-rating"}},"roomrates":{"type":"object","properties":{"from":{"$ref":"#/$defs/price"},"to":{"$ref":"#/$defs/price"}}},"allinclusive":{"type":]')
|| TO_CLOB(q'["boolean","apex":{"itemtype":"switch"}},"breakfastincluded":{"type":"boolean","apex":{"itemtype":"switch"}},"updated":{"extendedType":"date","format":"date-time","default":"NOW"},"features":{"type":"array","items":{"type":"string","apex":{"itemtype":"combobox"},"enum":["Bar","Carpark","Pool","Restaurant"]}},"comment":{"type":"string","maxLength":4000,"apex":{"lines":10,"colSpan":12,"newrow":true,"itemtype":"richtext"}}},"required":["name","continent","city"],"$defs":{"price":{"type":"number","mi]')
|| TO_CLOB(q'[nimum":0,"apex":{"format":"currency"}}}}]'));
Insert into OBJECT_TYPE (OBJECT_TYPE_ID,OBJECT_TYPE_NAME,OBJECT_SCHEMA) values ('6','Person',TO_CLOB(q'[{
  "type": "object",
  "required": ["lastname", "email"],
  "properties": {
    "lastname":  {"type": "string", "maxLength": 30},
    "firstname": {"type": "string", "maxLength": 30},
    "email":     {"type": "string", "format": "email"},
    "job":       {"type": "string", "enum": ["User", "DBA", "Admin"]},
    "password":  {"type": "string", "minLength": 8, "maxLength": 8, "apex": {"itemtype": "password"}},
    "office_address":     {"$ref": "#/$defs/address"},
    "deliverytohome":     { "t]')
|| TO_CLOB(q'[ype": "boolean", "apex": {"type": "switch", "label": "Delivery to homeoffice"}}
  },
  "if": {
      "properties": {
        "deliverytohome": { "const": true}
      }
  },
  "then": {
     "properties": {
       "home_address":     {"$ref": "#/$defs/address"}
     }
  },
  "else": {
     "properties": {
       "delivery_info":     {"type": "string"}
     }
  },
  "$defs":{
      "name": {"type": "string", "maxLength": 30},
      "address": {
        "type": "object",
        "required": ["zipco]')
|| TO_CLOB(q'[de", "city"],
        "properties": {
           "country": {"type": "string"},
           "state":   {"type": "string"},
           "zipcode": {"type": "string"},
           "city":    {"type": "string"},
           "street":  {"type": "string"}
         }
       }, 
      "cardid": {"type": "string", "pattern": "[0-9]{4}( [0-9]{4}){3}"}
   }
}]'));
Insert into OBJECT_TYPE (OBJECT_TYPE_ID,OBJECT_TYPE_NAME,OBJECT_SCHEMA) values ('21','simple-address','{
  "type": "object",
  "required": [ "address_type", "town", "zipcode" ],
  "properties": {
    "address_type": { 
      "type": "string", 
      "enum": [ "private", "business" ]
    },
    "street":   { "type": "string" },
    "town":     { "type": "string" },
    "zipcode":  { "type": "string" },
    "verified": { "type": "boolean" }
  }
}');
Insert into OBJECT_TYPE (OBJECT_TYPE_ID,OBJECT_TYPE_NAME,OBJECT_SCHEMA) values ('61','full-customized',TO_CLOB(q'[{
  "type": "object",
  "required": ["enum", "short_string"],
  "properties": {
    "enum":         { "type": "string", "enum": [ "val1", "val2" ], "apex": {"itemtype": "radio", "direction": "horizontal"}},
    "short_string": { "type": "string" },
    "long_string":  { "type": "string", "maxLength": 400, "apex": {"itemtype": "richtext", "lines": 4, "colSpan": 12}},
    "bool":         { "type": "boolean",                  "apex": {"itemtype": "switch"}},
    "int":          { "type": "i]')
|| TO_CLOB(q'[nteger", "maximum": 5,    "apex": {"itemtype": "starrating", "label": "*-Rating"}},
    "number":       { "type": "number" },
    "money":        { "type": "number", "apex": {"format": "currency"}},
    "date":         { "type": "string", "format": "date"},
    "date_time":    { "type": "string", "format": "date-time"},
    "email":        { "type": "string", "format": "email", "apex": {"textBefore": "Subtypes"}},
    "uri":          { "type": "string", "format": "uri"},
    "pattern":   ]')
|| TO_CLOB(q'[   { "type": "string", "pattern": "[0-9]{4}( [0-9]{4}){3}"},
    "multi":  { "type": "array", 
                        "items": {
                              "type": "string",
                              "enum":  ["val1",  "val2"]
                        }, 
                        "apex":  {"itemtype": "combobox", "textBefore": "Array"}                     }
   }
}]'));
Insert into OBJECT_TYPE (OBJECT_TYPE_ID,OBJECT_TYPE_NAME,OBJECT_SCHEMA) values ('81','full-complex',TO_CLOB(q'[{
  "type": "object",
  "required": ["lastname", "email"],
  "dependentRequired":{
    "creditcard": ["creditid"],
    "creditid":   ["creditcard"]
  },
  "properties": {
    "lastname":    {"type": "string", "maxLength": 30},
    "firstname":   {"type": "string", "maxLength": 30},
    "email":       {"type": "string", "format": "email"},
    "knowledge":   {"type":"array","items":{"type":"string", "enum":["DB","APEX","Javascript","PL/SQL"]}},
    "creditcard":  {"type": "string", "enum":["Visa"]')
|| TO_CLOB(q'[, "Mastercard", "Amex", "Diners"]},
    "creditid":    {"$ref": "#/$defs/cardid"},
    "office_address":     {"$ref": "#/$defs/address"},
    "deliverytohome":     { "type": "boolean"}
  },
  "if": {
      "properties": {
        "deliverytohome": { "const": true}
      }
  },
  "then": {
     "properties": {
       "home_address": {"$ref": "#/$defs/address"}
     }
  },
  "$defs":{
      "name": {"type": "string", "maxLength": 30},
      "address": {
        "type": "object",
        "required"]')
|| TO_CLOB(q'[: ["zipcode", "city"],
        "properties": {
           "country": {"type": "string"},
           "state":   {"type": "string"},
           "zipcode": {"type": "string"},
           "city":    {"type": "string"},
           "street":  {"type": "string"}
         }
       }, 
      "cardid": {"type": "string", "pattern": "[0-9]{4}( [0-9]{4}){3}"}
   }
}]'));
Insert into OBJECT_TYPE (OBJECT_TYPE_ID,OBJECT_TYPE_NAME,OBJECT_SCHEMA) values ('43','full-simple',TO_CLOB(q'[{
  "type": "object",
  "required": ["enum", "short_string"],
  "properties": {
    "enum":         { "type": "string", "enum": [ "val1", "val2" ]},
    "short_string": { "type": "string" },
    "long_string":  { "type": "string", "maxLength": 400},
    "bool":         { "type": "boolean"},
    "int":          { "type": "integer" },
    "number":       { "type": "number" },
    "date":         { "type": "string", "format": "date"},
    "date_time":    { "type": "string", "format": "da]')
|| TO_CLOB(q'[te-time"},
    "email":        { "type": "string", "format": "email"},
    "uri":          { "type": "string", "format": "uri"},
    "pattern":      { "type": "string", "pattern": "[0-9]{4}( [0-9]{4}){3}"}
  }
}]'));
Insert into OBJECT_TYPE (OBJECT_TYPE_ID,OBJECT_TYPE_NAME,OBJECT_SCHEMA) values ('1','Server',TO_CLOB(q'[{
  "type": "object",
  "required": ["vendor", "model"],
  "properties": {
    "vendor":  {"type": "string", "maxLength": 30},
    "model":   {"type": "string", "maxLength": 30},
    "os":      {"type": "string"},
    "cputype": {"type": "string"},
    "cpus":    {"type": "integer", "minimum": 1},
    "cores":   {"type": "integer", "minimum": 1},
    "threads": {"type": "integer", "minimum": 1},
    "ram":     {"type": "integer", "minimum": 1},
    "storage": {"type": "integer", "minimum": 0},
 ]')
|| TO_CLOB(q'[   "warranty_ends": {"type": "string", "format": "date"}
  }
}]'));
Insert into OBJECT_TYPE (OBJECT_TYPE_ID,OBJECT_TYPE_NAME,OBJECT_SCHEMA) values ('2','Switch','{
  "type": "object",
  "required": ["vendor", "model"],
  "properties": {
    "vendor": {"type": "string",  "maxLength": 30},
    "model":  {"type": "string",  "maxLength": 30},
    "ports":  {"type": "integer", "minimum": 1},
    "speed":  {"type": "string",  "enum": ["10MBit", "100MBit", "1GBit", "10GBit", "100GBit"]}
  }
}');
Insert into OBJECT_TYPE (OBJECT_TYPE_ID,OBJECT_TYPE_NAME,OBJECT_SCHEMA) values ('3','Printer','{
  "type": "object",
  "required": ["vendor", "model"],
  "properties": {
    "vendor": {"type": "string", "maxLength": 30},
    "model": {"type": "string", "maxLength": 30},
    "color": {"type": "boolean"},
    "papersize": {"type": "string", "enum":["A4", "A3", "Letter"]}
   }
}');
Insert into OBJECT_TYPE (OBJECT_TYPE_ID,OBJECT_TYPE_NAME,OBJECT_SCHEMA) values ('4','full-example',TO_CLOB(q'[{
  "title": "An example schema with all supported types",
  "type": "object",
  "required": ["lastname", "gender"],
  "dependentRequired":{
    "creditcard": ["creditid"]
  },
  "properties": {
    "lastname":    {"$ref": "#/$defs/name"},
    "firstname":   {"$ref": "#/$defs/name"},
    "birthday":    {"type": "string", "format": "date", "minimum": "1900-01-01"},
    "gender":      {"type": "string", "enum":["female", "male", "diverse"]},
    "creditcard":  {"type": "string", "enum"]')
|| TO_CLOB(q'[:["Visa", "Mastercard", "Amex", "Diners"]},
    "creditid":    {"$ref": "#/$defs/cardid"},
    "salary":      {"type": "number", "minimum": 10000.00,
                    "apex": {"format": "currency"}
                   },
    "payments":    {"type": "integer", "minimum": 1, "maximum": 15},
    "retired":     {"type": "boolean"},
    "email":       {"type": "string", "format": "email"},
    "website":     {"type": "string", "format": "uri"},
    "home_address":       {"$ref": "#/$defs/a]')
|| TO_CLOB(q'[ddress"},
    "office_address":     {"$ref": "#/$defs/address",
                           "room": {"type": "string"}
                          },
    "comment":     {"type": "string", "maxLength": 500},
    "lastlogin":   {"type": "string", "format": "date-time", "default": "NOW"},
    "source":      {"const": "via APEX-application"},
    "dummy":       {"type": "null"}
  },
  "$defs":{
      "name": {"type": "string", "maxLength": 30},
      "address": {
        "type": "object",
]')
|| TO_CLOB(q'[        "required": ["zipcode", "city"],
        "properties": {
           "country": {"$ref": "#/$defs/name"},
           "state":   {"$ref": "#/$defs/name"},
           "zipcode": {"type": "string", "maxLength": 10},
           "city":    {"$ref": "#/$defs/name"},
           "street":  {"$ref": "#/$defs/name"}
         }
       }, 
      "cardid": {"type": "string", "pattern": "[0-9]{4}( [0-9]{4}){3}"}
   }
}]'));
REM INSERTING into OBJECT23C
SET DEFINE OFF;
Insert into OBJECT23C (OBJECT_ID,OBJECT_NAME,DATA) values ('1','Braeburn','{"fruit":"Apple","quantity":3,"orderdate":"2024-03-19"}');
REM INSERTING into RELATION
SET DEFINE OFF;
REM INSERTING into RELATION_TYPE
SET DEFINE OFF;
Insert into RELATION_TYPE (RELATION_TYPE_ID,RELATION_TYPE_NAME,FROM_OBJECT_TYPE_ID,FROM_CARDINALITY_ID,TO_OBJECT_TYPE_ID,TO_CARDINALITY_ID,RELATION_SCHEMA) values ('1','booking','6','3','5','3','{
  "type":  "object",
  "properties": {
     "checkin":      { "type":  "string", "format":  "date"},
     "checkout":   { "type":  "string", "format":  "date"},
     "checkedin":  { "type":  "boolean"}, 
      "room": {"type": "string"}
  },
  "required": ["checkin", "checkout"]
}');
Insert into RELATION_TYPE (RELATION_TYPE_ID,RELATION_TYPE_NAME,FROM_OBJECT_TYPE_ID,FROM_CARDINALITY_ID,TO_OBJECT_TYPE_ID,TO_CARDINALITY_ID,RELATION_SCHEMA) values ('2','Server->Switch','1','3','2','4','{"type": "object",
  "properties": {
    "port": { "type": "integer"}
  }
}');
Insert into RELATION_TYPE (RELATION_TYPE_ID,RELATION_TYPE_NAME,FROM_OBJECT_TYPE_ID,FROM_CARDINALITY_ID,TO_OBJECT_TYPE_ID,TO_CARDINALITY_ID,RELATION_SCHEMA) values ('3','Switch->Switch','2','3','2','3','{}');
Insert into RELATION_TYPE (RELATION_TYPE_ID,RELATION_TYPE_NAME,FROM_OBJECT_TYPE_ID,FROM_CARDINALITY_ID,TO_OBJECT_TYPE_ID,TO_CARDINALITY_ID,RELATION_SCHEMA) values ('4','Printer->Switch','3','3','2','2','{"type": "object",
  "properties": {
    "port": { "type": "integer"}
  }
}');
Insert into RELATION_TYPE (RELATION_TYPE_ID,RELATION_TYPE_NAME,FROM_OBJECT_TYPE_ID,FROM_CARDINALITY_ID,TO_OBJECT_TYPE_ID,TO_CARDINALITY_ID,RELATION_SCHEMA) values ('5','Server owned by','1','3','6','2','{}');
Insert into RELATION_TYPE (RELATION_TYPE_ID,RELATION_TYPE_NAME,FROM_OBJECT_TYPE_ID,FROM_CARDINALITY_ID,TO_OBJECT_TYPE_ID,TO_CARDINALITY_ID,RELATION_SCHEMA) values ('6','Server->Admin','1','4','6','3','{}');

Commit;
--------------------------------------------------------
--  DDL for Index CARDINALITY_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "CARDINALITY_PK" ON "CARDINALITY" ("CARDINALITY_ID") 
  ;
--------------------------------------------------------
--  DDL for Index DATAITEM_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "DATAITEM_PK" ON "DATAITEM" ("DATAITEM_ID") 
  ;
--------------------------------------------------------
--  DDL for Index HOTEL_FEATURE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "HOTEL_FEATURE_PK" ON "HOTEL_FEATURE" ("FEATURE") 
  ;
--------------------------------------------------------
--  DDL for Index OBJECT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "OBJECT_PK" ON "OBJECT" ("OBJECT_ID") 
  ;
--------------------------------------------------------
--  DDL for Index OBJECT_TYPE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "OBJECT_TYPE_PK" ON "OBJECT_TYPE" ("OBJECT_TYPE_ID") 
  ;
--------------------------------------------------------
--  DDL for Index OBJECT_TYPE_UN
--------------------------------------------------------

  CREATE UNIQUE INDEX "OBJECT_TYPE_UN" ON "OBJECT_TYPE" ("OBJECT_TYPE_NAME") 
  ;
--------------------------------------------------------
--  DDL for Index OBJECT_UN
--------------------------------------------------------

  CREATE UNIQUE INDEX "OBJECT_UN" ON "OBJECT" ("OBJECT_TYPE_ID", "OBJECT_NAME") 
  ;
--------------------------------------------------------
--  DDL for Index OBJECT23C_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "OBJECT23C_PK" ON "OBJECT23C" ("OBJECT_ID") 
  ;
--------------------------------------------------------
--  DDL for Index RELATION_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "RELATION_PK" ON "RELATION" ("RELATION_ID") 
  ;
--------------------------------------------------------
--  DDL for Index RELATION_TYPE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "RELATION_TYPE_PK" ON "RELATION_TYPE" ("RELATION_TYPE_ID") 
  ;
--------------------------------------------------------
--  DDL for Index RELATION_TYPE_UN
--------------------------------------------------------

  CREATE UNIQUE INDEX "RELATION_TYPE_UN" ON "RELATION_TYPE" ("RELATION_TYPE_NAME") 
  ;
--------------------------------------------------------
--  DDL for Trigger HOTEL_FEATURE_TR
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "HOTEL_FEATURE_TR" 
  AFTER INSERT OR UPDATE OR DELETE ON hotel_feature
DECLARE enum VARCHAR2(32000);
BEGIN
  SELECT listagg('"'||REPLACE(feature,'"', '\"')||'"', ',') WITHIN GROUP (ORDER BY feature) INTO enum FROM hotel_feature;
  UPDATE object_type SET object_schema =
    json_mergepatch(object_schema, '{"properties": {"features": {"items": {"enum":['||enum||']}}}}')
  WHERE object_type_name='Hotel';
END;

/
ALTER TRIGGER "HOTEL_FEATURE_TR" ENABLE;
--------------------------------------------------------
--  Constraints for Table CARDINALITY
--------------------------------------------------------

  ALTER TABLE "CARDINALITY" MODIFY ("CARDINALITY_ID" NOT NULL ENABLE);
  ALTER TABLE "CARDINALITY" MODIFY ("CARDINALITY_NAME" NOT NULL ENABLE);
  ALTER TABLE "CARDINALITY" ADD CONSTRAINT "CARDINALITY_PK" PRIMARY KEY ("CARDINALITY_ID")
  USING INDEX  ENABLE;
--------------------------------------------------------
--  Constraints for Table DATAITEM
--------------------------------------------------------

  ALTER TABLE "DATAITEM" MODIFY ("DATAITEM_NAME" NOT NULL ENABLE);
  ALTER TABLE "DATAITEM" ADD CONSTRAINT "DATAITEM_PK" PRIMARY KEY ("DATAITEM_ID")
  USING INDEX  ENABLE;
  ALTER TABLE "DATAITEM" ADD CONSTRAINT "DATAITEM_CK_1" CHECK (data is json validate '{
  "type"       : "object",
  "properties" : {"fruit"    : {"type"      : "string",
                                "minLength" : 1,
                                "maxLength" : 10},
                  "quantity" : {"type"      : "number",
                                "minimum"   : 0,
                                "maximum"   : 100},
                  "orderdate": {"type": "string",
                                "default": "now",
                                "format": "date"}
  },
  "required"   : ["fruit", "quantity"]
}') ENABLE;
--------------------------------------------------------
--  Constraints for Table HOTEL_FEATURE
--------------------------------------------------------

  ALTER TABLE "HOTEL_FEATURE" MODIFY ("FEATURE" NOT NULL ENABLE);
  ALTER TABLE "HOTEL_FEATURE" ADD CONSTRAINT "HOTEL_FEATURE_PK" PRIMARY KEY ("FEATURE")
  USING INDEX  ENABLE;
--------------------------------------------------------
--  Constraints for Table OBJECT
--------------------------------------------------------

  ALTER TABLE "OBJECT" MODIFY ("OBJECT_TYPE_ID" NOT NULL ENABLE);
  ALTER TABLE "OBJECT" MODIFY ("OBJECT_NAME" NOT NULL ENABLE);
  ALTER TABLE "OBJECT" MODIFY ("CREATED_AT" NOT NULL ENABLE);
  ALTER TABLE "OBJECT" ADD CONSTRAINT "OBJECT_CK1" CHECK ( data IS JSON(STRICT) ) ENABLE;
  ALTER TABLE "OBJECT" ADD CONSTRAINT "OBJECT_PK" PRIMARY KEY ("OBJECT_ID")
  USING INDEX  ENABLE;
  ALTER TABLE "OBJECT" ADD CONSTRAINT "OBJECT_UN" UNIQUE ("OBJECT_TYPE_ID", "OBJECT_NAME")
  USING INDEX  ENABLE;
--------------------------------------------------------
--  Constraints for Table OBJECT_TYPE
--------------------------------------------------------

  ALTER TABLE "OBJECT_TYPE" MODIFY ("OBJECT_TYPE_NAME" NOT NULL ENABLE);
  ALTER TABLE "OBJECT_TYPE" ADD CONSTRAINT "OBJECT_TYPE_CK1" CHECK ( object_schema IS JSON(STRICT) ) ENABLE;
  ALTER TABLE "OBJECT_TYPE" ADD CONSTRAINT "OBJECT_TYPE_PK" PRIMARY KEY ("OBJECT_TYPE_ID")
  USING INDEX  ENABLE;
  ALTER TABLE "OBJECT_TYPE" ADD CONSTRAINT "OBJECT_TYPE_UN" UNIQUE ("OBJECT_TYPE_NAME")
  USING INDEX  ENABLE;
--------------------------------------------------------
--  Constraints for Table OBJECT23C
--------------------------------------------------------

  ALTER TABLE "OBJECT23C" MODIFY ("OBJECT_NAME" NOT NULL ENABLE);
  ALTER TABLE "OBJECT23C" ADD CONSTRAINT "OBJECT23C_PK" PRIMARY KEY ("OBJECT_ID")
  USING INDEX  ENABLE;
  ALTER TABLE "OBJECT23C" ADD CONSTRAINT "OBJECT23C_CK1" CHECK (data IS JSON VALIDATE q'[{
    "type"       : "object",
    "properties" : {
      "fruit"    : {"type"      : "string",
                    "minLength" : 1,
                    "maxLength" : 10},
      "quantity" : {"type"      : "number",
                    "minimum"   : 0,
                    "maximum"   : 100},
      "orderdate": {"type": "string",
                    "default": "now",
                    "format": "date"}
      }, 
      "required"   : ["fruit", "quantity"]
    }]'
  ) ENABLE;
--------------------------------------------------------
--  Constraints for Table RELATION
--------------------------------------------------------

  ALTER TABLE "RELATION" MODIFY ("CREATED_AT" NOT NULL ENABLE);
  ALTER TABLE "RELATION" MODIFY ("RELATION_TYPE_ID" NOT NULL ENABLE);
  ALTER TABLE "RELATION" MODIFY ("FROM_OBJECT_ID" NOT NULL ENABLE);
  ALTER TABLE "RELATION" MODIFY ("TO_OBJECT_ID" NOT NULL ENABLE);
  ALTER TABLE "RELATION" ADD CONSTRAINT "RELATION_CK1" CHECK ( data IS JSON(STRICT) ) ENABLE;
  ALTER TABLE "RELATION" ADD CONSTRAINT "RELATION_PK" PRIMARY KEY ("RELATION_ID")
  USING INDEX  ENABLE;
--------------------------------------------------------
--  Constraints for Table RELATION_TYPE
--------------------------------------------------------

  ALTER TABLE "RELATION_TYPE" MODIFY ("RELATION_TYPE_NAME" NOT NULL ENABLE);
  ALTER TABLE "RELATION_TYPE" MODIFY ("FROM_OBJECT_TYPE_ID" NOT NULL ENABLE);
  ALTER TABLE "RELATION_TYPE" MODIFY ("FROM_CARDINALITY_ID" NOT NULL ENABLE);
  ALTER TABLE "RELATION_TYPE" MODIFY ("TO_OBJECT_TYPE_ID" NOT NULL ENABLE);
  ALTER TABLE "RELATION_TYPE" MODIFY ("TO_CARDINALITY_ID" NOT NULL ENABLE);
  ALTER TABLE "RELATION_TYPE" ADD CONSTRAINT "RELATION_TYPE_CK1" CHECK ( relation_schema IS JSON(STRICT) ) ENABLE;
  ALTER TABLE "RELATION_TYPE" ADD CONSTRAINT "RELATION_TYPE_PK" PRIMARY KEY ("RELATION_TYPE_ID")
  USING INDEX  ENABLE;
  ALTER TABLE "RELATION_TYPE" ADD CONSTRAINT "RELATION_TYPE_UN" UNIQUE ("RELATION_TYPE_NAME")
  USING INDEX  ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table OBJECT
--------------------------------------------------------

  ALTER TABLE "OBJECT" ADD CONSTRAINT "OBJECT_FK1" FOREIGN KEY ("OBJECT_TYPE_ID")
	  REFERENCES "OBJECT_TYPE" ("OBJECT_TYPE_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table RELATION
--------------------------------------------------------

  ALTER TABLE "RELATION" ADD CONSTRAINT "RELATION_FK1" FOREIGN KEY ("RELATION_TYPE_ID")
	  REFERENCES "RELATION_TYPE" ("RELATION_TYPE_ID") ENABLE;
  ALTER TABLE "RELATION" ADD CONSTRAINT "RELATION_FK2" FOREIGN KEY ("FROM_OBJECT_ID")
	  REFERENCES "OBJECT" ("OBJECT_ID") ENABLE;
  ALTER TABLE "RELATION" ADD CONSTRAINT "RELATION_FK3" FOREIGN KEY ("TO_OBJECT_ID")
	  REFERENCES "OBJECT" ("OBJECT_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table RELATION_TYPE
--------------------------------------------------------

  ALTER TABLE "RELATION_TYPE" ADD CONSTRAINT "RELATION_TYPE_FK1" FOREIGN KEY ("FROM_OBJECT_TYPE_ID")
	  REFERENCES "OBJECT_TYPE" ("OBJECT_TYPE_ID") ENABLE;
  ALTER TABLE "RELATION_TYPE" ADD CONSTRAINT "RELATION_TYPE_FK2" FOREIGN KEY ("TO_OBJECT_TYPE_ID")
	  REFERENCES "OBJECT_TYPE" ("OBJECT_TYPE_ID") ENABLE;
  ALTER TABLE "RELATION_TYPE" ADD CONSTRAINT "RELATION_TYPE_FK3" FOREIGN KEY ("FROM_CARDINALITY_ID")
	  REFERENCES "CARDINALITY" ("CARDINALITY_ID") ENABLE;
  ALTER TABLE "RELATION_TYPE" ADD CONSTRAINT "RELATION_TYPE_FK4" FOREIGN KEY ("TO_CARDINALITY_ID")
	  REFERENCES "CARDINALITY" ("CARDINALITY_ID") ENABLE;
