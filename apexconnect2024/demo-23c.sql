-- ---------------------------------------------------------------------------------------
--  ORACLE23C JSON-Validate
-- ---------------------------------------------------------------------------------------
CREATE TABLE object23c(
  object_id      INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY,
  object_name    VARCHAR2(30) NOT NULL,
  data           JSON,
  CONSTRAINT object23c_pk PRIMARY KEY (object_id)
);


ALTER TABLE object23c DROP CONSTRAINT object23c_ck1;

ALTER TABLE object23c ADD CONSTRAINT object23c_ck1 
  CHECK (data IS JSON VALIDATE q'[{
    "type"       : "object",
    "properties" : {
      "fruit"    : {"type"      : "string",
                    "minLength" : 1,
                    "maxLength" : 10},
      "quantity" : {"type"      : "number",
                    "minimum"   : 0,
                    "maximum"   : 100},
      "orderdate": {"type": "string",
                    "default": "now",
                    "format": "date"}
      }, 
      "required"   : ["fruit", "quantity"]
    }]'
  );


-- ---------------------------------------------------------------------------------------
--  ORACLE23C JSON-schema + APEX-extension
-- ---------------------------------------------------------------------------------------

ALTER TABLE object23c DROP CONSTRAINT object23c_ck1;

ALTER TABLE object23c ADD CONSTRAINT object23c_ck1 
  CHECK (data IS JSON VALIDATE q'[{
    "type"       : "object",
    "properties" : {
      "fruit"    : {"type"      : "string",
                    "minLength" : 1,
                    "maxLength" : 10},
      "quantity" : {"type"      : "number",
                    "minimum"   : 0,
                    "maximum"   : 100},
      "quality":   { "type": "string", "enum": ["A","B", "C", "D", "E", "F"], "apex": {"itemtype": "radio", "direction": "horizontal", "colSpan": 6}}, 
      "orderdate": {"type": "string",
                    "default": "now",
                    "format": "date"}
      }, 
      "required"   : ["fruit", "quantity"]
    }]'
  );


-- ---------------------------------------------------------------------------------------
-- ENUM Uopdate
-- ---------------------------------------------------------------------------------------

DROP TRIGGER hotel_feature_tr;

CREATE OR REPLACE TRIGGER hotel_feature_tr
  AFTER INSERT OR UPDATE OR DELETE ON hotel_feature
DECLARE enum VARCHAR2(32000);
BEGIN
  SELECT listagg('"'||REPLACE(feature,'"', '\"')||'"', ',') WITHIN GROUP (ORDER BY feature) INTO enum FROM hotel_feature;
  UPDATE object_type SET object_schema =
    json_mergepatch(object_schema, '{"properties": {"features": {"items": {"enum":['||enum||']}}}}')
  WHERE object_type_name='Hotel';
END;
/

select * from hotel_feature;

insert into hotel_feature values('Gym');
commit;

-- ---------------------------------------------------------------------------------------
--  ORACLE23C Describe JSON-schema
-- ---------------------------------------------------------------------------------------

set pagesize 1000
SELECT json_serialize(DBMS_JSON_SCHEMA.describe('OBJECT23C', null, 'DATA') pretty);


-- ---------------------------------------------------------------------------------------
--  ORACLE23C JSON-Relational-Duality
-- ---------------------------------------------------------------------------------------

drop view json23c;

CREATE OR REPLACE json relational duality view json23c AS
SELECT JSON { '_object_id': o.objecT_id,
              'object_name': o.object_name,
--            'data': o.data,
              'object_type': ( select json { '_object_type_id': ot.object_type_id,
                                             'object_type_name': ot.objecT_type_name}
                               from   object_type ot
                               where  o.object_type_id = ot.object_type_id
                             )
            }
FROM object o WITH INSERT UPDATE DELETE
;

select json_serialize(data pretty) 
from json23c
fetch first 1 row only;

CREATE OR REPLACE json relational duality view json23c AS
SELECT JSON { '_object_id': o.objecT_id,
              'object_name': o.object_name,
--              'created_at': o.created_at,
              unnest(select json { '_object_type_id': ot.object_type_id,
                                   'object_type_name': ot.objecT_type_name}
                     from   object_type ot
                     where  o.object_type_id = ot.object_type_id
                   )
            }
FROM object o WITH INSERT UPDATE DELETE
;

select json_serialize(data pretty) 
from json23c
fetch first 1 row only;


------------
SELECT json_serialize(DBMS_JSON_SCHEMA.describe('JSON23C') PRETTY);

select rowid, ora_rowscn, DATA from JSON23C where rownum<=1;

select rowid, ora_rowscn, t.* from object t;

update /*+qb_name(apex$100_14)*/(select rowid, DATA from JSON23C with check option)
set "DATA"=:APEX$VAL2
where "ROWID"=:APEX$PK1
;

-- ORA-42620: DML-Vorgänge können nicht auf Views ausgeführt werden, die auf Basis von Dualitäts-Views erstellt wurden.

update JSON23C
set "DATA"=:APEX$VAL2
where "ROWID"=:APEX$PK1
;

-----

insert into json23c values('{"object_name": "new object", "object_type_name": "test-string-1"}');

SELECT json_serialize(DBMS_JSON_SCHEMA.describe('JSON23C') PRETTY);

